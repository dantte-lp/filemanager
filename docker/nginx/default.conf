server {
    listen 80 default_server;
    server_name _;

    root /data;
    index index.html index.php;

    # Логи
    access_log /var/log/nginx/filemanager.access.log;
    error_log /var/log/nginx/filemanager.error.log;

    # Защита конфиденциальных файлов
    location ~ /(config|generate-password\.php|\.htaccess|\.git|user_hash\.txt) {
        deny all;
        return 404;
    }

    # API endpoints
    location ~ ^/api(/.*)?$ {
        root /var/www/fileserver;

        fastcgi_split_path_info ^(/api)(/.*)$;

        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root/api.php;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param REQUEST_URI $request_uri;
        fastcgi_pass unix:/run/php-fpm/php-fpm.sock;

        # Отключаем буферизацию для больших файлов
        fastcgi_buffering off;
        fastcgi_request_buffering off;

        # Поддержка больших файлов
        fastcgi_read_timeout 3600;
        fastcgi_send_timeout 3600;

        # Передаем заголовки авторизации
        fastcgi_param HTTP_AUTHORIZATION $http_authorization;
        fastcgi_pass_header Authorization;

        # CORS заголовки
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Range" always;

        # Обработка OPTIONS запросов
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, Range";
            add_header Access-Control-Max-Age 3600;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }

    # api.php - старый API endpoint
    location = /api.php {
        root /var/www/fileserver;

        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_pass unix:/run/php-fpm/php-fpm.sock;

        # Настройки для больших файлов
        fastcgi_buffering off;
        fastcgi_request_buffering off;
        fastcgi_read_timeout 3600;
        fastcgi_send_timeout 3600;

        # Авторизация
        fastcgi_param HTTP_AUTHORIZATION $http_authorization;
        fastcgi_pass_header Authorization;

        # CORS
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Range" always;
    }

    # Главная страница
    location = / {
        root /var/www/fileserver;
        try_files /index.html =404;

        # Отключаем кеширование
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;

        # CSP заголовки
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://cdn.tailwindcss.com; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://cdn.tailwindcss.com https://fonts.googleapis.com; font-src 'self' data: https://cdnjs.cloudflare.com https://fonts.gstatic.com; img-src 'self' data: https: blob:; connect-src 'self';" always;
    }

    # JavaScript файлы
    location ~ ^/js/.*\.js$ {
        root /var/www/fileserver;
        try_files $uri =404;
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
    }

    # Favicon
    location = /favicon.ico {
        root /var/www/fileserver;
        access_log off;
        expires 30d;
    }

    # Все остальное направляем на index.html
    location / {
        root /var/www/fileserver;
        try_files /index.html =404;

        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
    }

    # Блокировка PHP файлов
    location ~ \.php$ {
        return 404;
    }

    # Безопасность
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
}